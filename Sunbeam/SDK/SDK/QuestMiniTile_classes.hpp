#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuestMiniTile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass QuestMiniTile.QuestMiniTile_C
// 0x0068 (0x02A0 - 0x0238)
class UQuestMiniTile_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0238(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       PulseSelectedTileBackground;                       // 0x0240(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       PulseSelectedTileBackgroundAndIcon;                // 0x0248(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          BorderShell;                                       // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       BottomTextQuest;                                   // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNode_C*                                Node_Background;                                   // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNode_C*                                Node_Selected;                                     // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 QuestTypeIcon;                                     // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TopTextQuest;                                      // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortQuestItem*                         Quest_Item_Def;                                    // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestItemDefinition*               Proto_Item_Def;                                    // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FTimerHandle                           TilePulseTimer;                                    // 0x0290(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          Show_Text_On_Bottom;                               // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          UseHighContrast;                                   // 0x0299(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_QuestMiniTile(int32 EntryPoint);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void Init();
	void SetState(class UFortQuestItem* InCurrentQuest, bool* QuestFound);
	void ToggleCurrentQuestTileTimer(bool IsEnabled);
	void PlayTileAnimation();
	void SetStateAndFindIncompleteQuest(bool* QuestFound);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"QuestMiniTile_C">();
	}
	static class UQuestMiniTile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuestMiniTile_C>();
	}
};
static_assert(alignof(UQuestMiniTile_C) == 0x000008, "Wrong alignment on UQuestMiniTile_C");
static_assert(sizeof(UQuestMiniTile_C) == 0x0002A0, "Wrong size on UQuestMiniTile_C");
static_assert(offsetof(UQuestMiniTile_C, UberGraphFrame) == 0x000238, "Member 'UQuestMiniTile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UQuestMiniTile_C, PulseSelectedTileBackground) == 0x000240, "Member 'UQuestMiniTile_C::PulseSelectedTileBackground' has a wrong offset!");
static_assert(offsetof(UQuestMiniTile_C, PulseSelectedTileBackgroundAndIcon) == 0x000248, "Member 'UQuestMiniTile_C::PulseSelectedTileBackgroundAndIcon' has a wrong offset!");
static_assert(offsetof(UQuestMiniTile_C, BorderShell) == 0x000250, "Member 'UQuestMiniTile_C::BorderShell' has a wrong offset!");
static_assert(offsetof(UQuestMiniTile_C, BottomTextQuest) == 0x000258, "Member 'UQuestMiniTile_C::BottomTextQuest' has a wrong offset!");
static_assert(offsetof(UQuestMiniTile_C, Node_Background) == 0x000260, "Member 'UQuestMiniTile_C::Node_Background' has a wrong offset!");
static_assert(offsetof(UQuestMiniTile_C, Node_Selected) == 0x000268, "Member 'UQuestMiniTile_C::Node_Selected' has a wrong offset!");
static_assert(offsetof(UQuestMiniTile_C, QuestTypeIcon) == 0x000270, "Member 'UQuestMiniTile_C::QuestTypeIcon' has a wrong offset!");
static_assert(offsetof(UQuestMiniTile_C, TopTextQuest) == 0x000278, "Member 'UQuestMiniTile_C::TopTextQuest' has a wrong offset!");
static_assert(offsetof(UQuestMiniTile_C, Quest_Item_Def) == 0x000280, "Member 'UQuestMiniTile_C::Quest_Item_Def' has a wrong offset!");
static_assert(offsetof(UQuestMiniTile_C, Proto_Item_Def) == 0x000288, "Member 'UQuestMiniTile_C::Proto_Item_Def' has a wrong offset!");
static_assert(offsetof(UQuestMiniTile_C, TilePulseTimer) == 0x000290, "Member 'UQuestMiniTile_C::TilePulseTimer' has a wrong offset!");
static_assert(offsetof(UQuestMiniTile_C, Show_Text_On_Bottom) == 0x000298, "Member 'UQuestMiniTile_C::Show_Text_On_Bottom' has a wrong offset!");
static_assert(offsetof(UQuestMiniTile_C, UseHighContrast) == 0x000299, "Member 'UQuestMiniTile_C::UseHighContrast' has a wrong offset!");

}

