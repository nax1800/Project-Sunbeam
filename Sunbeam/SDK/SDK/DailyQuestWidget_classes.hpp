#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DailyQuestWidget

#include "Basic.hpp"

#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass DailyQuestWidget.DailyQuestWidget_C
// 0x0030 (0x0268 - 0x0238)
class UDailyQuestWidget_C final : public UCommonUserWidget
{
public:
	class UDailyQuestRewardInfo_C*                DailyQuestRewardInfo;                              // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           ObjectivesBox;                                     // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       QuestName;                                         // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortQuestItem*                         Quest;                                             // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UFortQuestObjectiveInfo*>        VisibleObjectives;                                 // 0x0258(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void SetQuestItem(class UFortQuestItem* Quest_0);
	void FilterObjectives();
	void UpdateObjectiveWidgets();
	void CreateAllObjectiveWidgets();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DailyQuestWidget_C">();
	}
	static class UDailyQuestWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDailyQuestWidget_C>();
	}
};
static_assert(alignof(UDailyQuestWidget_C) == 0x000008, "Wrong alignment on UDailyQuestWidget_C");
static_assert(sizeof(UDailyQuestWidget_C) == 0x000268, "Wrong size on UDailyQuestWidget_C");
static_assert(offsetof(UDailyQuestWidget_C, DailyQuestRewardInfo) == 0x000238, "Member 'UDailyQuestWidget_C::DailyQuestRewardInfo' has a wrong offset!");
static_assert(offsetof(UDailyQuestWidget_C, ObjectivesBox) == 0x000240, "Member 'UDailyQuestWidget_C::ObjectivesBox' has a wrong offset!");
static_assert(offsetof(UDailyQuestWidget_C, QuestName) == 0x000248, "Member 'UDailyQuestWidget_C::QuestName' has a wrong offset!");
static_assert(offsetof(UDailyQuestWidget_C, Quest) == 0x000250, "Member 'UDailyQuestWidget_C::Quest' has a wrong offset!");
static_assert(offsetof(UDailyQuestWidget_C, VisibleObjectives) == 0x000258, "Member 'UDailyQuestWidget_C::VisibleObjectives' has a wrong offset!");

}

