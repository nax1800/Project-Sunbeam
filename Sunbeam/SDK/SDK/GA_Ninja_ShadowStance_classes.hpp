#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Ninja_ShadowStance

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GAT_NinjaTriggeredAbility_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Ninja_ShadowStance.GA_Ninja_ShadowStance_C
// 0x01A8 (0x0CB8 - 0x0B10)
class UGA_Ninja_ShadowStance_C final : public UGAT_NinjaTriggeredAbility_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Ninja_ShadowStance_C;            // 0x0B10(0x0008)(Transient, DuplicateTransient)
	struct FGameplayTag                           EventActivation;                                   // 0x0B18(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EventComplete;                                     // 0x0B20(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_ShadowStance;                                   // 0x0B28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TC_ShadowStanceActivate;                           // 0x0B30(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_EdgedWeapons;                                   // 0x0B50(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_MoveLikeShadow;                                 // 0x0B70(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          MoveLikeShadow;                                    // 0x0B90(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B91[0x7];                                      // 0x0B91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  TC_ShadowierStance;                                // 0x0B98(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          ShadowierStance;                                   // 0x0BB8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB9[0x7];                                      // 0x0BB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  TC_ShroudOfTheDragon;                              // 0x0BC0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_NowYouSeeMe;                                    // 0x0BE0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_MantisShroud;                                   // 0x0C00(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_DimMak;                                         // 0x0C20(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_ThreeRiversTechnique;                           // 0x0C40(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_LegendarySword;                                 // 0x0C60(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          ShroudOfTheDragon;                                 // 0x0C80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          NowYouSeeMe;                                       // 0x0C81(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          MantisShroud;                                      // 0x0C82(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DimMak;                                            // 0x0C83(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ThreeRiversTechnique;                              // 0x0C84(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          LegendarySword;                                    // 0x0C85(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C86[0x2];                                      // 0x0C86(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  TC_SneakySneaky;                                   // 0x0C88(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          SneakySneaky;                                      // 0x0CA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA9[0x7];                                      // 0x0CA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 GE_SneakySneaky;                                   // 0x0CB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_Ninja_ShadowStance(int32 EntryPoint);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void SetupAbility(class UAbilitySystemComponent* Ability_System);

	bool K2_ShouldAbilityRespondToEvent(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayEventData& Payload) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Ninja_ShadowStance_C">();
	}
	static class UGA_Ninja_ShadowStance_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Ninja_ShadowStance_C>();
	}
};
static_assert(alignof(UGA_Ninja_ShadowStance_C) == 0x000008, "Wrong alignment on UGA_Ninja_ShadowStance_C");
static_assert(sizeof(UGA_Ninja_ShadowStance_C) == 0x000CB8, "Wrong size on UGA_Ninja_ShadowStance_C");
static_assert(offsetof(UGA_Ninja_ShadowStance_C, UberGraphFrame_GA_Ninja_ShadowStance_C) == 0x000B10, "Member 'UGA_Ninja_ShadowStance_C::UberGraphFrame_GA_Ninja_ShadowStance_C' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_ShadowStance_C, EventActivation) == 0x000B18, "Member 'UGA_Ninja_ShadowStance_C::EventActivation' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_ShadowStance_C, EventComplete) == 0x000B20, "Member 'UGA_Ninja_ShadowStance_C::EventComplete' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_ShadowStance_C, GE_ShadowStance) == 0x000B28, "Member 'UGA_Ninja_ShadowStance_C::GE_ShadowStance' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_ShadowStance_C, TC_ShadowStanceActivate) == 0x000B30, "Member 'UGA_Ninja_ShadowStance_C::TC_ShadowStanceActivate' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_ShadowStance_C, TC_EdgedWeapons) == 0x000B50, "Member 'UGA_Ninja_ShadowStance_C::TC_EdgedWeapons' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_ShadowStance_C, TC_MoveLikeShadow) == 0x000B70, "Member 'UGA_Ninja_ShadowStance_C::TC_MoveLikeShadow' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_ShadowStance_C, MoveLikeShadow) == 0x000B90, "Member 'UGA_Ninja_ShadowStance_C::MoveLikeShadow' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_ShadowStance_C, TC_ShadowierStance) == 0x000B98, "Member 'UGA_Ninja_ShadowStance_C::TC_ShadowierStance' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_ShadowStance_C, ShadowierStance) == 0x000BB8, "Member 'UGA_Ninja_ShadowStance_C::ShadowierStance' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_ShadowStance_C, TC_ShroudOfTheDragon) == 0x000BC0, "Member 'UGA_Ninja_ShadowStance_C::TC_ShroudOfTheDragon' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_ShadowStance_C, TC_NowYouSeeMe) == 0x000BE0, "Member 'UGA_Ninja_ShadowStance_C::TC_NowYouSeeMe' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_ShadowStance_C, TC_MantisShroud) == 0x000C00, "Member 'UGA_Ninja_ShadowStance_C::TC_MantisShroud' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_ShadowStance_C, TC_DimMak) == 0x000C20, "Member 'UGA_Ninja_ShadowStance_C::TC_DimMak' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_ShadowStance_C, TC_ThreeRiversTechnique) == 0x000C40, "Member 'UGA_Ninja_ShadowStance_C::TC_ThreeRiversTechnique' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_ShadowStance_C, TC_LegendarySword) == 0x000C60, "Member 'UGA_Ninja_ShadowStance_C::TC_LegendarySword' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_ShadowStance_C, ShroudOfTheDragon) == 0x000C80, "Member 'UGA_Ninja_ShadowStance_C::ShroudOfTheDragon' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_ShadowStance_C, NowYouSeeMe) == 0x000C81, "Member 'UGA_Ninja_ShadowStance_C::NowYouSeeMe' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_ShadowStance_C, MantisShroud) == 0x000C82, "Member 'UGA_Ninja_ShadowStance_C::MantisShroud' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_ShadowStance_C, DimMak) == 0x000C83, "Member 'UGA_Ninja_ShadowStance_C::DimMak' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_ShadowStance_C, ThreeRiversTechnique) == 0x000C84, "Member 'UGA_Ninja_ShadowStance_C::ThreeRiversTechnique' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_ShadowStance_C, LegendarySword) == 0x000C85, "Member 'UGA_Ninja_ShadowStance_C::LegendarySword' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_ShadowStance_C, TC_SneakySneaky) == 0x000C88, "Member 'UGA_Ninja_ShadowStance_C::TC_SneakySneaky' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_ShadowStance_C, SneakySneaky) == 0x000CA8, "Member 'UGA_Ninja_ShadowStance_C::SneakySneaky' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_ShadowStance_C, GE_SneakySneaky) == 0x000CB0, "Member 'UGA_Ninja_ShadowStance_C::GE_SneakySneaky' has a wrong offset!");

}

