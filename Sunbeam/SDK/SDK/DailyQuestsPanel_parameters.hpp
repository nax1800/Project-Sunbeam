#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DailyQuestsPanel

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function DailyQuestsPanel.DailyQuestsPanel_C.ExecuteUbergraph_DailyQuestsPanel
// 0x0010 (0x0010 - 0x0000)
struct DailyQuestsPanel_C_ExecuteUbergraph_DailyQuestsPanel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DailyQuestsPanel_C_ExecuteUbergraph_DailyQuestsPanel) == 0x000008, "Wrong alignment on DailyQuestsPanel_C_ExecuteUbergraph_DailyQuestsPanel");
static_assert(sizeof(DailyQuestsPanel_C_ExecuteUbergraph_DailyQuestsPanel) == 0x000010, "Wrong size on DailyQuestsPanel_C_ExecuteUbergraph_DailyQuestsPanel");
static_assert(offsetof(DailyQuestsPanel_C_ExecuteUbergraph_DailyQuestsPanel, EntryPoint) == 0x000000, "Member 'DailyQuestsPanel_C_ExecuteUbergraph_DailyQuestsPanel::EntryPoint' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_ExecuteUbergraph_DailyQuestsPanel, K2Node_ComponentBoundEvent_Button) == 0x000008, "Member 'DailyQuestsPanel_C_ExecuteUbergraph_DailyQuestsPanel::K2Node_ComponentBoundEvent_Button' has a wrong offset!");

// Function DailyQuestsPanel.DailyQuestsPanel_C.BndEvt__IconTextButton_K2Node_ComponentBoundEvent_66_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct DailyQuestsPanel_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_66_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DailyQuestsPanel_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_66_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on DailyQuestsPanel_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_66_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(DailyQuestsPanel_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_66_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on DailyQuestsPanel_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_66_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(DailyQuestsPanel_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_66_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'DailyQuestsPanel_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_66_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function DailyQuestsPanel.DailyQuestsPanel_C.BindEventListeners
// 0x0050 (0x0050 - 0x0000)
struct DailyQuestsPanel_C_BindEventListeners final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UFortQuestItem* Quest, TArray<struct FFortItemInstanceQuantityPair>& Rewards)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(TArray<class UFortQuestItem*>& Quests)> K2Node_CreateDelegate_OutputDelegate3;             // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate4;             // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DailyQuestsPanel_C_BindEventListeners) == 0x000008, "Wrong alignment on DailyQuestsPanel_C_BindEventListeners");
static_assert(sizeof(DailyQuestsPanel_C_BindEventListeners) == 0x000050, "Wrong size on DailyQuestsPanel_C_BindEventListeners");
static_assert(offsetof(DailyQuestsPanel_C_BindEventListeners, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'DailyQuestsPanel_C_BindEventListeners::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_BindEventListeners, K2Node_CreateDelegate_OutputDelegate2) == 0x000010, "Member 'DailyQuestsPanel_C_BindEventListeners::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_BindEventListeners, K2Node_CreateDelegate_OutputDelegate3) == 0x000020, "Member 'DailyQuestsPanel_C_BindEventListeners::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_BindEventListeners, K2Node_CreateDelegate_OutputDelegate4) == 0x000030, "Member 'DailyQuestsPanel_C_BindEventListeners::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_BindEventListeners, CallFunc_GetContext_ReturnValue) == 0x000040, "Member 'DailyQuestsPanel_C_BindEventListeners::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_BindEventListeners, CallFunc_GetQuestManager_ReturnValue) == 0x000048, "Member 'DailyQuestsPanel_C_BindEventListeners::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");

// Function DailyQuestsPanel.DailyQuestsPanel_C.OnQuestsUpdated
// 0x0060 (0x0060 - 0x0000)
struct DailyQuestsPanel_C_OnQuestsUpdated final
{
public:
	bool                                          ClaimQuests;                                       // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortQuestItem*>                 CallFunc_GetCurrentQuests_OutCurrentQuests;        // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	class UFortQuestItem*                         CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuestState                               CallFunc_GetQuestState_ReturnValue;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestItemDefinition*               CallFunc_GetQuestDefinitionBP_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortQuestType                                CallFunc_GetQuestType_ReturnValue;                 // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DailyQuestsPanel_C_OnQuestsUpdated) == 0x000008, "Wrong alignment on DailyQuestsPanel_C_OnQuestsUpdated");
static_assert(sizeof(DailyQuestsPanel_C_OnQuestsUpdated) == 0x000060, "Wrong size on DailyQuestsPanel_C_OnQuestsUpdated");
static_assert(offsetof(DailyQuestsPanel_C_OnQuestsUpdated, ClaimQuests) == 0x000000, "Member 'DailyQuestsPanel_C_OnQuestsUpdated::ClaimQuests' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_OnQuestsUpdated, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'DailyQuestsPanel_C_OnQuestsUpdated::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_OnQuestsUpdated, CallFunc_GetQuestManager_ReturnValue) == 0x000010, "Member 'DailyQuestsPanel_C_OnQuestsUpdated::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_OnQuestsUpdated, Temp_int_Array_Index_Variable) == 0x000018, "Member 'DailyQuestsPanel_C_OnQuestsUpdated::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_OnQuestsUpdated, CallFunc_GetCurrentQuests_OutCurrentQuests) == 0x000020, "Member 'DailyQuestsPanel_C_OnQuestsUpdated::CallFunc_GetCurrentQuests_OutCurrentQuests' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_OnQuestsUpdated, CallFunc_Array_Get_Item) == 0x000030, "Member 'DailyQuestsPanel_C_OnQuestsUpdated::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_OnQuestsUpdated, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'DailyQuestsPanel_C_OnQuestsUpdated::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_OnQuestsUpdated, CallFunc_GetQuestState_ReturnValue) == 0x00003C, "Member 'DailyQuestsPanel_C_OnQuestsUpdated::CallFunc_GetQuestState_ReturnValue' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_OnQuestsUpdated, CallFunc_GetQuestDefinitionBP_ReturnValue) == 0x000040, "Member 'DailyQuestsPanel_C_OnQuestsUpdated::CallFunc_GetQuestDefinitionBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_OnQuestsUpdated, K2Node_SwitchEnum_CmpSuccess) == 0x000048, "Member 'DailyQuestsPanel_C_OnQuestsUpdated::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_OnQuestsUpdated, CallFunc_GetQuestType_ReturnValue) == 0x000049, "Member 'DailyQuestsPanel_C_OnQuestsUpdated::CallFunc_GetQuestType_ReturnValue' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_OnQuestsUpdated, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00004A, "Member 'DailyQuestsPanel_C_OnQuestsUpdated::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_OnQuestsUpdated, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'DailyQuestsPanel_C_OnQuestsUpdated::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_OnQuestsUpdated, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'DailyQuestsPanel_C_OnQuestsUpdated::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_OnQuestsUpdated, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'DailyQuestsPanel_C_OnQuestsUpdated::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_OnQuestsUpdated, Temp_byte_Variable) == 0x000058, "Member 'DailyQuestsPanel_C_OnQuestsUpdated::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_OnQuestsUpdated, Temp_byte_Variable2) == 0x000059, "Member 'DailyQuestsPanel_C_OnQuestsUpdated::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_OnQuestsUpdated, Temp_bool_Variable) == 0x00005A, "Member 'DailyQuestsPanel_C_OnQuestsUpdated::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_OnQuestsUpdated, K2Node_Select_Default) == 0x00005B, "Member 'DailyQuestsPanel_C_OnQuestsUpdated::K2Node_Select_Default' has a wrong offset!");

// Function DailyQuestsPanel.DailyQuestsPanel_C.CreateQuestWidget
// 0x0020 (0x0020 - 0x0000)
struct DailyQuestsPanel_C_CreateQuestWidget final
{
public:
	class UFortQuestItem*                         Quest;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDailyQuestWidget_C*                    CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DailyQuestsPanel_C_CreateQuestWidget) == 0x000008, "Wrong alignment on DailyQuestsPanel_C_CreateQuestWidget");
static_assert(sizeof(DailyQuestsPanel_C_CreateQuestWidget) == 0x000020, "Wrong size on DailyQuestsPanel_C_CreateQuestWidget");
static_assert(offsetof(DailyQuestsPanel_C_CreateQuestWidget, Quest) == 0x000000, "Member 'DailyQuestsPanel_C_CreateQuestWidget::Quest' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_CreateQuestWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'DailyQuestsPanel_C_CreateQuestWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_CreateQuestWidget, CallFunc_Create_ReturnValue) == 0x000010, "Member 'DailyQuestsPanel_C_CreateQuestWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_CreateQuestWidget, CallFunc_AddChild_ReturnValue) == 0x000018, "Member 'DailyQuestsPanel_C_CreateQuestWidget::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function DailyQuestsPanel.DailyQuestsPanel_C.OnQuestsGranted
// 0x0010 (0x0010 - 0x0000)
struct DailyQuestsPanel_C_OnQuestsGranted final
{
public:
	TArray<class UFortQuestItem*>                 NewQuests;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(DailyQuestsPanel_C_OnQuestsGranted) == 0x000008, "Wrong alignment on DailyQuestsPanel_C_OnQuestsGranted");
static_assert(sizeof(DailyQuestsPanel_C_OnQuestsGranted) == 0x000010, "Wrong size on DailyQuestsPanel_C_OnQuestsGranted");
static_assert(offsetof(DailyQuestsPanel_C_OnQuestsGranted, NewQuests) == 0x000000, "Member 'DailyQuestsPanel_C_OnQuestsGranted::NewQuests' has a wrong offset!");

// Function DailyQuestsPanel.DailyQuestsPanel_C.OnQuestRewardClaimed
// 0x0018 (0x0018 - 0x0000)
struct DailyQuestsPanel_C_OnQuestRewardClaimed final
{
public:
	class UFortQuestItem*                         Quest;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFortItemInstanceQuantityPair>  Rewards;                                           // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(DailyQuestsPanel_C_OnQuestRewardClaimed) == 0x000008, "Wrong alignment on DailyQuestsPanel_C_OnQuestRewardClaimed");
static_assert(sizeof(DailyQuestsPanel_C_OnQuestRewardClaimed) == 0x000018, "Wrong size on DailyQuestsPanel_C_OnQuestRewardClaimed");
static_assert(offsetof(DailyQuestsPanel_C_OnQuestRewardClaimed, Quest) == 0x000000, "Member 'DailyQuestsPanel_C_OnQuestRewardClaimed::Quest' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_OnQuestRewardClaimed, Rewards) == 0x000008, "Member 'DailyQuestsPanel_C_OnQuestRewardClaimed::Rewards' has a wrong offset!");

// Function DailyQuestsPanel.DailyQuestsPanel_C.ClaimNextQuestReward
// 0x0010 (0x0010 - 0x0000)
struct DailyQuestsPanel_C_ClaimNextQuestReward final
{
public:
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DailyQuestsPanel_C_ClaimNextQuestReward) == 0x000008, "Wrong alignment on DailyQuestsPanel_C_ClaimNextQuestReward");
static_assert(sizeof(DailyQuestsPanel_C_ClaimNextQuestReward) == 0x000010, "Wrong size on DailyQuestsPanel_C_ClaimNextQuestReward");
static_assert(offsetof(DailyQuestsPanel_C_ClaimNextQuestReward, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'DailyQuestsPanel_C_ClaimNextQuestReward::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(DailyQuestsPanel_C_ClaimNextQuestReward, CallFunc_GetQuestManager_ReturnValue) == 0x000008, "Member 'DailyQuestsPanel_C_ClaimNextQuestReward::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");

}

