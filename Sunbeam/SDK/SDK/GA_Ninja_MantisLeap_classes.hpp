#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Ninja_MantisLeap

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GAT_NinjaTriggeredAbility_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Ninja_MantisLeap.GA_Ninja_MantisLeap_C
// 0x0140 (0x0C50 - 0x0B10)
class UGA_Ninja_MantisLeap_C final : public UGAT_NinjaTriggeredAbility_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Ninja_MantisLeap_C;              // 0x0B10(0x0008)(Transient, DuplicateTransient)
	float                                         Jump_Multiple;                                     // 0x0B18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Basic_Jump_Z_Adjust;                               // 0x0B1C(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TC_CanExecute;                                     // 0x0B28(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                PrayingMantisJumpZAdjust;                          // 0x0B48(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B54[0x4];                                      // 0x0B54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  TC_PrayingMantis;                                  // 0x0B58(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                FinalJumpHeight;                                   // 0x0B78(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B84[0x4];                                      // 0x0B84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           EventActivation;                                   // 0x0B88(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EventComplete;                                     // 0x0B90(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EC_MantisStrike;                                   // 0x0B98(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Event_EnterShadowStance;                           // 0x0BA0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TC_MantisStrike;                                   // 0x0BA8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          PrayingMantis;                                     // 0x0BC8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          MantisStrike;                                      // 0x0BC9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BCA[0x6];                                      // 0x0BCA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  TC_ShadowStanceActive;                             // 0x0BD0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          ShadowStanceActive;                                // 0x0BF0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BF1[0x7];                                      // 0x0BF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           MantisStrikeGCN;                                   // 0x0BF8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          MantisShroud;                                      // 0x0C00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C01[0x7];                                      // 0x0C01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  TC_MantisShroud;                                   // 0x0C08(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_ThreeMantisStyle;                               // 0x0C28(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          ThreeMantisStyle;                                  // 0x0C48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_GA_Ninja_MantisLeap(int32 EntryPoint);
	void Leapt();
	void OnPawnLanded(const struct FHitResult& Hit);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void Targeted_023C704A4687994EABB842B14222FB9B(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Cancelled_023C704A4687994EABB842B14222FB9B(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	bool K2_ShouldAbilityRespondToEvent(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayEventData& Payload);
	void SetJumpHeight(class APlayerPawn_Ninja_C* Ninja_Pawn, class AFortPlayerPawn** Ninja_Pawn_Out, struct FVector* Jump_Height);
	void SetupAbility(class UAbilitySystemComponent* AbilitySystem);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Ninja_MantisLeap_C">();
	}
	static class UGA_Ninja_MantisLeap_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Ninja_MantisLeap_C>();
	}
};
static_assert(alignof(UGA_Ninja_MantisLeap_C) == 0x000008, "Wrong alignment on UGA_Ninja_MantisLeap_C");
static_assert(sizeof(UGA_Ninja_MantisLeap_C) == 0x000C50, "Wrong size on UGA_Ninja_MantisLeap_C");
static_assert(offsetof(UGA_Ninja_MantisLeap_C, UberGraphFrame_GA_Ninja_MantisLeap_C) == 0x000B10, "Member 'UGA_Ninja_MantisLeap_C::UberGraphFrame_GA_Ninja_MantisLeap_C' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_MantisLeap_C, Jump_Multiple) == 0x000B18, "Member 'UGA_Ninja_MantisLeap_C::Jump_Multiple' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_MantisLeap_C, Basic_Jump_Z_Adjust) == 0x000B1C, "Member 'UGA_Ninja_MantisLeap_C::Basic_Jump_Z_Adjust' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_MantisLeap_C, TC_CanExecute) == 0x000B28, "Member 'UGA_Ninja_MantisLeap_C::TC_CanExecute' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_MantisLeap_C, PrayingMantisJumpZAdjust) == 0x000B48, "Member 'UGA_Ninja_MantisLeap_C::PrayingMantisJumpZAdjust' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_MantisLeap_C, TC_PrayingMantis) == 0x000B58, "Member 'UGA_Ninja_MantisLeap_C::TC_PrayingMantis' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_MantisLeap_C, FinalJumpHeight) == 0x000B78, "Member 'UGA_Ninja_MantisLeap_C::FinalJumpHeight' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_MantisLeap_C, EventActivation) == 0x000B88, "Member 'UGA_Ninja_MantisLeap_C::EventActivation' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_MantisLeap_C, EventComplete) == 0x000B90, "Member 'UGA_Ninja_MantisLeap_C::EventComplete' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_MantisLeap_C, EC_MantisStrike) == 0x000B98, "Member 'UGA_Ninja_MantisLeap_C::EC_MantisStrike' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_MantisLeap_C, Event_EnterShadowStance) == 0x000BA0, "Member 'UGA_Ninja_MantisLeap_C::Event_EnterShadowStance' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_MantisLeap_C, TC_MantisStrike) == 0x000BA8, "Member 'UGA_Ninja_MantisLeap_C::TC_MantisStrike' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_MantisLeap_C, PrayingMantis) == 0x000BC8, "Member 'UGA_Ninja_MantisLeap_C::PrayingMantis' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_MantisLeap_C, MantisStrike) == 0x000BC9, "Member 'UGA_Ninja_MantisLeap_C::MantisStrike' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_MantisLeap_C, TC_ShadowStanceActive) == 0x000BD0, "Member 'UGA_Ninja_MantisLeap_C::TC_ShadowStanceActive' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_MantisLeap_C, ShadowStanceActive) == 0x000BF0, "Member 'UGA_Ninja_MantisLeap_C::ShadowStanceActive' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_MantisLeap_C, MantisStrikeGCN) == 0x000BF8, "Member 'UGA_Ninja_MantisLeap_C::MantisStrikeGCN' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_MantisLeap_C, MantisShroud) == 0x000C00, "Member 'UGA_Ninja_MantisLeap_C::MantisShroud' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_MantisLeap_C, TC_MantisShroud) == 0x000C08, "Member 'UGA_Ninja_MantisLeap_C::TC_MantisShroud' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_MantisLeap_C, TC_ThreeMantisStyle) == 0x000C28, "Member 'UGA_Ninja_MantisLeap_C::TC_ThreeMantisStyle' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_MantisLeap_C, ThreeMantisStyle) == 0x000C48, "Member 'UGA_Ninja_MantisLeap_C::ThreeMantisStyle' has a wrong offset!");

}

