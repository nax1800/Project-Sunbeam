#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaAerialFeedback

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AthenaAerialFeedback.AthenaAerialFeedback_C.ExecuteUbergraph_AthenaAerialFeedback
// 0x0158 (0x0158 - 0x0000)
struct AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAthenaAerialPhase                            Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAthena_PlayerController_C*             K2Node_DynamicCast_AsAthena_Player_Controller;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0018)()
	class FText                                   Temp_text_Variable2;                               // 0x0040(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ZeroConstructor, ReferenceParm)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00A8(0x0034)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0018)()
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAthena_GameState_C*                    K2Node_DynamicCast_AsAthena_Game_State;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAthenaAerialPhase                            CallFunc_GetAerialPhase_ReturnValue;               // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10B[0x5];                                      // 0x010B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0110(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue2;             // 0x0128(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0140(0x0018)()
};
static_assert(alignof(AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback) == 0x000008, "Wrong alignment on AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback");
static_assert(sizeof(AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback) == 0x000158, "Wrong size on AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback");
static_assert(offsetof(AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback, EntryPoint) == 0x000000, "Member 'AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback, Temp_byte_Variable) == 0x000010, "Member 'AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback, K2Node_DynamicCast_AsAthena_Player_Controller) == 0x000018, "Member 'AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback::K2Node_DynamicCast_AsAthena_Player_Controller' has a wrong offset!");
static_assert(offsetof(AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback, Temp_text_Variable) == 0x000028, "Member 'AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback, Temp_text_Variable2) == 0x000040, "Member 'AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback::Temp_text_Variable2' has a wrong offset!");
static_assert(offsetof(AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback, K2Node_MakeArray_Array) == 0x000098, "Member 'AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback, K2Node_Event_MyGeometry) == 0x0000A8, "Member 'AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback, K2Node_Event_InDeltaTime) == 0x0000DC, "Member 'AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback, CallFunc_GetGameState_ReturnValue) == 0x0000F8, "Member 'AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback, K2Node_DynamicCast_AsAthena_Game_State) == 0x000100, "Member 'AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback::K2Node_DynamicCast_AsAthena_Game_State' has a wrong offset!");
static_assert(offsetof(AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback, K2Node_DynamicCast_bSuccess2) == 0x000108, "Member 'AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback, CallFunc_GetAerialPhase_ReturnValue) == 0x000109, "Member 'AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback::CallFunc_GetAerialPhase_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback, K2Node_SwitchEnum_CmpSuccess) == 0x00010A, "Member 'AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback, CallFunc_MakeLiteralText_ReturnValue) == 0x000110, "Member 'AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback, CallFunc_MakeLiteralText_ReturnValue2) == 0x000128, "Member 'AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback::CallFunc_MakeLiteralText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback, K2Node_Select_Default) == 0x000140, "Member 'AthenaAerialFeedback_C_ExecuteUbergraph_AthenaAerialFeedback::K2Node_Select_Default' has a wrong offset!");

// Function AthenaAerialFeedback.AthenaAerialFeedback_C.Tick
// 0x0038 (0x0038 - 0x0000)
struct AthenaAerialFeedback_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0034(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaAerialFeedback_C_Tick) == 0x000004, "Wrong alignment on AthenaAerialFeedback_C_Tick");
static_assert(sizeof(AthenaAerialFeedback_C_Tick) == 0x000038, "Wrong size on AthenaAerialFeedback_C_Tick");
static_assert(offsetof(AthenaAerialFeedback_C_Tick, MyGeometry) == 0x000000, "Member 'AthenaAerialFeedback_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaAerialFeedback_C_Tick, InDeltaTime) == 0x000034, "Member 'AthenaAerialFeedback_C_Tick::InDeltaTime' has a wrong offset!");

}

