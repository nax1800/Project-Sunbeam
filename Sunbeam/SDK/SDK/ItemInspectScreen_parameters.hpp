#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemInspectScreen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "UMG_structs.hpp"
#include "CommonUI_structs.hpp"


namespace SDK::Params
{

// Function ItemInspectScreen.ItemInspectScreen_C.ExecuteUbergraph_ItemInspectScreen
// 0x0108 (0x0108 - 0x0000)
struct ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonUIContext*                       CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue2;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonInputManager*                    CallFunc_GetInputManager_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue3;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HandleBack_PassThrough;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bItemChanged;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bAmmoChanged;           // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bIngredientsChanged;    // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HandleBack_PassThrough2;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue4;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItem*                              K2Node_ComponentBoundEvent_Item;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_RecipeIndex;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue5;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItem*                              K2Node_Event_ItemToInspect;                        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortItemInspectionMode                       K2Node_Event_Mode;                                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_ShouldAllowUpgrading;                 // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_ShouldAllowEvolution;                 // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_ShouldAllowFavorite;                  // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsTemporaryItem;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue6;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bCursorModeEnabled)>      K2Node_CreateDelegate_OutputDelegate;              // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HandleUpgrade_PassThrough;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue7;                  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TArray<struct FFortItemInstanceQuantityPair>& ItemsQuantities)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HandleEvolution_PassThrough;              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLevel_ReturnValue;                     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxLevel_ReturnValue;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue8;                  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue9;                  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_TabId;                  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          K2Node_ComponentBoundEvent_TabButton;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPanelOnStack_ReturnValue;               // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue10;                 // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemView_C*                            CallFunc_Create_ReturnValue;                       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAsyncAction_MCPContextUpgradeItem* CallFunc_UpgradeItem_ReturnValue;                  // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x00F8(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen) == 0x000008, "Wrong alignment on ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen");
static_assert(sizeof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen) == 0x000108, "Wrong size on ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, EntryPoint) == 0x000000, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetContext_ReturnValue2) == 0x000010, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetInputManager_ReturnValue) == 0x000018, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetInputManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetContext_ReturnValue3) == 0x000020, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetContext_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_HandleBack_PassThrough) == 0x000028, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_HandleBack_PassThrough' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_ComponentBoundEvent_bItemChanged) == 0x000029, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_ComponentBoundEvent_bItemChanged' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_ComponentBoundEvent_bAmmoChanged) == 0x00002A, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_ComponentBoundEvent_bAmmoChanged' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_ComponentBoundEvent_bIngredientsChanged) == 0x00002B, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_ComponentBoundEvent_bIngredientsChanged' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_HandleBack_PassThrough2) == 0x00002C, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_HandleBack_PassThrough2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetContext_ReturnValue4) == 0x000030, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetContext_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_ComponentBoundEvent_Item) == 0x000038, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_ComponentBoundEvent_Item' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_ComponentBoundEvent_RecipeIndex) == 0x000040, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_ComponentBoundEvent_RecipeIndex' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetContext_ReturnValue5) == 0x000048, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetContext_ReturnValue5' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_Event_ItemToInspect) == 0x000050, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_Event_ItemToInspect' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_Event_Mode) == 0x000058, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_Event_Mode' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_Event_ShouldAllowUpgrading) == 0x000059, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_Event_ShouldAllowUpgrading' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_Event_ShouldAllowEvolution) == 0x00005A, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_Event_ShouldAllowEvolution' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_Event_ShouldAllowFavorite) == 0x00005B, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_Event_ShouldAllowFavorite' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_Event_IsTemporaryItem) == 0x00005C, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_Event_IsTemporaryItem' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetContext_ReturnValue6) == 0x000060, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetContext_ReturnValue6' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_CreateDelegate_OutputDelegate) == 0x000068, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_HandleUpgrade_PassThrough) == 0x000078, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_HandleUpgrade_PassThrough' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetContext_ReturnValue7) == 0x000080, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetContext_ReturnValue7' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_CreateDelegate_OutputDelegate2) == 0x000088, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_HandleEvolution_PassThrough) == 0x000098, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_HandleEvolution_PassThrough' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetLevel_ReturnValue) == 0x00009C, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetMaxLevel_ReturnValue) == 0x0000A0, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetMaxLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetContext_ReturnValue8) == 0x0000A8, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetContext_ReturnValue8' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetContext_ReturnValue9) == 0x0000B0, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetContext_ReturnValue9' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_ComponentBoundEvent_TabId) == 0x0000B8, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_ComponentBoundEvent_TabId' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_ComponentBoundEvent_TabButton) == 0x0000C0, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_ComponentBoundEvent_TabButton' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_IsPanelOnStack_ReturnValue) == 0x0000C8, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_IsPanelOnStack_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000D0, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_GetContext_ReturnValue10) == 0x0000D8, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_GetContext_ReturnValue10' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_Create_ReturnValue) == 0x0000E0, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_UpgradeItem_ReturnValue) == 0x0000E8, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_UpgradeItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, CallFunc_IsValid_ReturnValue) == 0x0000F0, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen, K2Node_CreateDelegate_OutputDelegate3) == 0x0000F8, "Member 'ItemInspectScreen_C_ExecuteUbergraph_ItemInspectScreen::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.BndEvt__DetailPanelTabList-PC_K2Node_ComponentBoundEvent_385_OnTabButtonCreated__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ItemInspectScreen_C_BndEvt__DetailPanelTabListMinusPC_K2Node_ComponentBoundEvent_385_OnTabButtonCreated__DelegateSignature final
{
public:
	class FName                                   TabId;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          TabButton;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_BndEvt__DetailPanelTabListMinusPC_K2Node_ComponentBoundEvent_385_OnTabButtonCreated__DelegateSignature) == 0x000008, "Wrong alignment on ItemInspectScreen_C_BndEvt__DetailPanelTabListMinusPC_K2Node_ComponentBoundEvent_385_OnTabButtonCreated__DelegateSignature");
static_assert(sizeof(ItemInspectScreen_C_BndEvt__DetailPanelTabListMinusPC_K2Node_ComponentBoundEvent_385_OnTabButtonCreated__DelegateSignature) == 0x000010, "Wrong size on ItemInspectScreen_C_BndEvt__DetailPanelTabListMinusPC_K2Node_ComponentBoundEvent_385_OnTabButtonCreated__DelegateSignature");
static_assert(offsetof(ItemInspectScreen_C_BndEvt__DetailPanelTabListMinusPC_K2Node_ComponentBoundEvent_385_OnTabButtonCreated__DelegateSignature, TabId) == 0x000000, "Member 'ItemInspectScreen_C_BndEvt__DetailPanelTabListMinusPC_K2Node_ComponentBoundEvent_385_OnTabButtonCreated__DelegateSignature::TabId' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_BndEvt__DetailPanelTabListMinusPC_K2Node_ComponentBoundEvent_385_OnTabButtonCreated__DelegateSignature, TabButton) == 0x000008, "Member 'ItemInspectScreen_C_BndEvt__DetailPanelTabListMinusPC_K2Node_ComponentBoundEvent_385_OnTabButtonCreated__DelegateSignature::TabButton' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.OpenItemInspect
// 0x0010 (0x0010 - 0x0000)
struct ItemInspectScreen_C_OpenItemInspect final
{
public:
	class UFortItem*                              ItemToInspect;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortItemInspectionMode                       Mode;                                              // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShouldAllowUpgrading;                              // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShouldAllowEvolution;                              // 0x000A(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShouldAllowFavorite;                               // 0x000B(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsTemporaryItem;                                   // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_OpenItemInspect) == 0x000008, "Wrong alignment on ItemInspectScreen_C_OpenItemInspect");
static_assert(sizeof(ItemInspectScreen_C_OpenItemInspect) == 0x000010, "Wrong size on ItemInspectScreen_C_OpenItemInspect");
static_assert(offsetof(ItemInspectScreen_C_OpenItemInspect, ItemToInspect) == 0x000000, "Member 'ItemInspectScreen_C_OpenItemInspect::ItemToInspect' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_OpenItemInspect, Mode) == 0x000008, "Member 'ItemInspectScreen_C_OpenItemInspect::Mode' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_OpenItemInspect, ShouldAllowUpgrading) == 0x000009, "Member 'ItemInspectScreen_C_OpenItemInspect::ShouldAllowUpgrading' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_OpenItemInspect, ShouldAllowEvolution) == 0x00000A, "Member 'ItemInspectScreen_C_OpenItemInspect::ShouldAllowEvolution' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_OpenItemInspect, ShouldAllowFavorite) == 0x00000B, "Member 'ItemInspectScreen_C_OpenItemInspect::ShouldAllowFavorite' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_OpenItemInspect, IsTemporaryItem) == 0x00000C, "Member 'ItemInspectScreen_C_OpenItemInspect::IsTemporaryItem' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ItemInspectScreen_C_BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RecipeIndex;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature) == 0x000008, "Wrong alignment on ItemInspectScreen_C_BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature");
static_assert(sizeof(ItemInspectScreen_C_BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature) == 0x000010, "Wrong size on ItemInspectScreen_C_BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature");
static_assert(offsetof(ItemInspectScreen_C_BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature, Item) == 0x000000, "Member 'ItemInspectScreen_C_BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature::Item' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature, RecipeIndex) == 0x000008, "Member 'ItemInspectScreen_C_BndEvt__ItemInspectEvolutionConfirmation_K2Node_ComponentBoundEvent_2_OnEvolutionOptionSelected__DelegateSignature::RecipeIndex' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.BndEvt__InspectedItem_K2Node_ComponentBoundEvent_9_FortOnItemChangedDelegate__DelegateSignature
// 0x0003 (0x0003 - 0x0000)
struct ItemInspectScreen_C_BndEvt__InspectedItem_K2Node_ComponentBoundEvent_9_FortOnItemChangedDelegate__DelegateSignature final
{
public:
	bool                                          bItemChanged;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAmmoChanged;                                      // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIngredientsChanged;                               // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_BndEvt__InspectedItem_K2Node_ComponentBoundEvent_9_FortOnItemChangedDelegate__DelegateSignature) == 0x000001, "Wrong alignment on ItemInspectScreen_C_BndEvt__InspectedItem_K2Node_ComponentBoundEvent_9_FortOnItemChangedDelegate__DelegateSignature");
static_assert(sizeof(ItemInspectScreen_C_BndEvt__InspectedItem_K2Node_ComponentBoundEvent_9_FortOnItemChangedDelegate__DelegateSignature) == 0x000003, "Wrong size on ItemInspectScreen_C_BndEvt__InspectedItem_K2Node_ComponentBoundEvent_9_FortOnItemChangedDelegate__DelegateSignature");
static_assert(offsetof(ItemInspectScreen_C_BndEvt__InspectedItem_K2Node_ComponentBoundEvent_9_FortOnItemChangedDelegate__DelegateSignature, bItemChanged) == 0x000000, "Member 'ItemInspectScreen_C_BndEvt__InspectedItem_K2Node_ComponentBoundEvent_9_FortOnItemChangedDelegate__DelegateSignature::bItemChanged' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_BndEvt__InspectedItem_K2Node_ComponentBoundEvent_9_FortOnItemChangedDelegate__DelegateSignature, bAmmoChanged) == 0x000001, "Member 'ItemInspectScreen_C_BndEvt__InspectedItem_K2Node_ComponentBoundEvent_9_FortOnItemChangedDelegate__DelegateSignature::bAmmoChanged' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_BndEvt__InspectedItem_K2Node_ComponentBoundEvent_9_FortOnItemChangedDelegate__DelegateSignature, bIngredientsChanged) == 0x000002, "Member 'ItemInspectScreen_C_BndEvt__InspectedItem_K2Node_ComponentBoundEvent_9_FortOnItemChangedDelegate__DelegateSignature::bIngredientsChanged' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.SetItemToRepresent
// 0x0310 (0x0310 - 0x0000)
struct ItemInspectScreen_C_SetItemToRepresent final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortTabButtonLabelInfo                K2Node_MakeStruct_FortTabButtonLabelInfo;          // 0x0010(0x00A8)()
	bool                                          CallFunc_RegisterFortTab_ReturnValue;              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortAlterationItemDefinition*>  CallFunc_GetAlterations_ReturnValue;               // 0x00C0(0x0010)(ZeroConstructor, ReferenceParm)
	class UFortHero*                              K2Node_DynamicCast_AsFort_Hero;                    // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortWorker*                            K2Node_DynamicCast_AsFort_Worker;                  // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHero*                              K2Node_DynamicCast_AsFort_Hero2;                   // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSchematic_ReturnValue;                  // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortTabButtonLabelInfo                K2Node_MakeStruct_FortTabButtonLabelInfo2;         // 0x0108(0x00A8)()
	struct FFortTabButtonLabelInfo                K2Node_MakeStruct_FortTabButtonLabelInfo3;         // 0x01B0(0x00A8)()
	bool                                          CallFunc_RegisterFortTab_ReturnValue2;             // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortTabButtonLabelInfo                K2Node_MakeStruct_FortTabButtonLabelInfo4;         // 0x0260(0x00A8)()
	bool                                          CallFunc_RegisterFortTab_ReturnValue3;             // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RegisterFortTab_ReturnValue4;             // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_SetItemToRepresent) == 0x000008, "Wrong alignment on ItemInspectScreen_C_SetItemToRepresent");
static_assert(sizeof(ItemInspectScreen_C_SetItemToRepresent) == 0x000310, "Wrong size on ItemInspectScreen_C_SetItemToRepresent");
static_assert(offsetof(ItemInspectScreen_C_SetItemToRepresent, Item) == 0x000000, "Member 'ItemInspectScreen_C_SetItemToRepresent::Item' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetItemToRepresent, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'ItemInspectScreen_C_SetItemToRepresent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetItemToRepresent, K2Node_MakeStruct_FortTabButtonLabelInfo) == 0x000010, "Member 'ItemInspectScreen_C_SetItemToRepresent::K2Node_MakeStruct_FortTabButtonLabelInfo' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetItemToRepresent, CallFunc_RegisterFortTab_ReturnValue) == 0x0000B8, "Member 'ItemInspectScreen_C_SetItemToRepresent::CallFunc_RegisterFortTab_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetItemToRepresent, CallFunc_GetAlterations_ReturnValue) == 0x0000C0, "Member 'ItemInspectScreen_C_SetItemToRepresent::CallFunc_GetAlterations_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetItemToRepresent, K2Node_DynamicCast_AsFort_Hero) == 0x0000D0, "Member 'ItemInspectScreen_C_SetItemToRepresent::K2Node_DynamicCast_AsFort_Hero' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetItemToRepresent, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'ItemInspectScreen_C_SetItemToRepresent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetItemToRepresent, CallFunc_Array_Length_ReturnValue) == 0x0000DC, "Member 'ItemInspectScreen_C_SetItemToRepresent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetItemToRepresent, CallFunc_Greater_IntInt_ReturnValue) == 0x0000E0, "Member 'ItemInspectScreen_C_SetItemToRepresent::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetItemToRepresent, K2Node_DynamicCast_AsFort_Worker) == 0x0000E8, "Member 'ItemInspectScreen_C_SetItemToRepresent::K2Node_DynamicCast_AsFort_Worker' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetItemToRepresent, K2Node_DynamicCast_bSuccess2) == 0x0000F0, "Member 'ItemInspectScreen_C_SetItemToRepresent::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetItemToRepresent, K2Node_DynamicCast_AsFort_Hero2) == 0x0000F8, "Member 'ItemInspectScreen_C_SetItemToRepresent::K2Node_DynamicCast_AsFort_Hero2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetItemToRepresent, K2Node_DynamicCast_bSuccess3) == 0x000100, "Member 'ItemInspectScreen_C_SetItemToRepresent::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetItemToRepresent, CallFunc_IsSchematic_ReturnValue) == 0x000101, "Member 'ItemInspectScreen_C_SetItemToRepresent::CallFunc_IsSchematic_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetItemToRepresent, K2Node_MakeStruct_FortTabButtonLabelInfo2) == 0x000108, "Member 'ItemInspectScreen_C_SetItemToRepresent::K2Node_MakeStruct_FortTabButtonLabelInfo2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetItemToRepresent, K2Node_MakeStruct_FortTabButtonLabelInfo3) == 0x0001B0, "Member 'ItemInspectScreen_C_SetItemToRepresent::K2Node_MakeStruct_FortTabButtonLabelInfo3' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetItemToRepresent, CallFunc_RegisterFortTab_ReturnValue2) == 0x000258, "Member 'ItemInspectScreen_C_SetItemToRepresent::CallFunc_RegisterFortTab_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetItemToRepresent, K2Node_MakeStruct_FortTabButtonLabelInfo4) == 0x000260, "Member 'ItemInspectScreen_C_SetItemToRepresent::K2Node_MakeStruct_FortTabButtonLabelInfo4' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetItemToRepresent, CallFunc_RegisterFortTab_ReturnValue3) == 0x000308, "Member 'ItemInspectScreen_C_SetItemToRepresent::CallFunc_RegisterFortTab_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetItemToRepresent, CallFunc_RegisterFortTab_ReturnValue4) == 0x000309, "Member 'ItemInspectScreen_C_SetItemToRepresent::CallFunc_RegisterFortTab_ReturnValue4' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.HandleBack
// 0x0010 (0x0010 - 0x0000)
struct ItemInspectScreen_C_HandleBack final
{
public:
	bool                                          PassThrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUIManagerWidget_NUI*               CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_HandleBack) == 0x000008, "Wrong alignment on ItemInspectScreen_C_HandleBack");
static_assert(sizeof(ItemInspectScreen_C_HandleBack) == 0x000010, "Wrong size on ItemInspectScreen_C_HandleBack");
static_assert(offsetof(ItemInspectScreen_C_HandleBack, PassThrough) == 0x000000, "Member 'ItemInspectScreen_C_HandleBack::PassThrough' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleBack, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'ItemInspectScreen_C_HandleBack::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleBack, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000008, "Member 'ItemInspectScreen_C_HandleBack::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.HandleFavorite
// 0x0020 (0x0020 - 0x0000)
struct ItemInspectScreen_C_HandleFavorite final
{
public:
	bool                                          PassThrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAccountItem*                       K2Node_DynamicCast_AsFort_Account_Item;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFavorite_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_HandleFavorite) == 0x000008, "Wrong alignment on ItemInspectScreen_C_HandleFavorite");
static_assert(sizeof(ItemInspectScreen_C_HandleFavorite) == 0x000020, "Wrong size on ItemInspectScreen_C_HandleFavorite");
static_assert(offsetof(ItemInspectScreen_C_HandleFavorite, PassThrough) == 0x000000, "Member 'ItemInspectScreen_C_HandleFavorite::PassThrough' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleFavorite, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'ItemInspectScreen_C_HandleFavorite::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleFavorite, K2Node_DynamicCast_AsFort_Account_Item) == 0x000010, "Member 'ItemInspectScreen_C_HandleFavorite::K2Node_DynamicCast_AsFort_Account_Item' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleFavorite, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ItemInspectScreen_C_HandleFavorite::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleFavorite, CallFunc_IsFavorite_ReturnValue) == 0x000019, "Member 'ItemInspectScreen_C_HandleFavorite::CallFunc_IsFavorite_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleFavorite, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'ItemInspectScreen_C_HandleFavorite::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.HandleView
// 0x0001 (0x0001 - 0x0000)
struct ItemInspectScreen_C_HandleView final
{
public:
	bool                                          PassThrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_HandleView) == 0x000001, "Wrong alignment on ItemInspectScreen_C_HandleView");
static_assert(sizeof(ItemInspectScreen_C_HandleView) == 0x000001, "Wrong size on ItemInspectScreen_C_HandleView");
static_assert(offsetof(ItemInspectScreen_C_HandleView, PassThrough) == 0x000000, "Member 'ItemInspectScreen_C_HandleView::PassThrough' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.HandleEvolution
// 0x0001 (0x0001 - 0x0000)
struct ItemInspectScreen_C_HandleEvolution final
{
public:
	bool                                          PassThrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_HandleEvolution) == 0x000001, "Wrong alignment on ItemInspectScreen_C_HandleEvolution");
static_assert(sizeof(ItemInspectScreen_C_HandleEvolution) == 0x000001, "Wrong size on ItemInspectScreen_C_HandleEvolution");
static_assert(offsetof(ItemInspectScreen_C_HandleEvolution, PassThrough) == 0x000000, "Member 'ItemInspectScreen_C_HandleEvolution::PassThrough' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.HandleUpgrade
// 0x0001 (0x0001 - 0x0000)
struct ItemInspectScreen_C_HandleUpgrade final
{
public:
	bool                                          PassThrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_HandleUpgrade) == 0x000001, "Wrong alignment on ItemInspectScreen_C_HandleUpgrade");
static_assert(sizeof(ItemInspectScreen_C_HandleUpgrade) == 0x000001, "Wrong size on ItemInspectScreen_C_HandleUpgrade");
static_assert(offsetof(ItemInspectScreen_C_HandleUpgrade, PassThrough) == 0x000000, "Member 'ItemInspectScreen_C_HandleUpgrade::PassThrough' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.SetInspectMode
// 0x0018 (0x0018 - 0x0000)
struct ItemInspectScreen_C_SetInspectMode final
{
public:
	EFortItemInspectionMode                       NewInspectMode;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_SetInspectMode) == 0x000008, "Wrong alignment on ItemInspectScreen_C_SetInspectMode");
static_assert(sizeof(ItemInspectScreen_C_SetInspectMode) == 0x000018, "Wrong size on ItemInspectScreen_C_SetInspectMode");
static_assert(offsetof(ItemInspectScreen_C_SetInspectMode, NewInspectMode) == 0x000000, "Member 'ItemInspectScreen_C_SetInspectMode::NewInspectMode' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetInspectMode, Temp_byte_Variable) == 0x000001, "Member 'ItemInspectScreen_C_SetInspectMode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetInspectMode, Temp_byte_Variable2) == 0x000002, "Member 'ItemInspectScreen_C_SetInspectMode::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetInspectMode, Temp_bool_Variable) == 0x000003, "Member 'ItemInspectScreen_C_SetInspectMode::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetInspectMode, CallFunc_GetUINavigationManager_ReturnValue) == 0x000008, "Member 'ItemInspectScreen_C_SetInspectMode::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetInspectMode, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'ItemInspectScreen_C_SetInspectMode::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetInspectMode, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'ItemInspectScreen_C_SetInspectMode::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetInspectMode, K2Node_Select_Default) == 0x000012, "Member 'ItemInspectScreen_C_SetInspectMode::K2Node_Select_Default' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.HandleEvolutionChoiceHovered
// 0x0008 (0x0008 - 0x0000)
struct ItemInspectScreen_C_HandleEvolutionChoiceHovered final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_HandleEvolutionChoiceHovered) == 0x000008, "Wrong alignment on ItemInspectScreen_C_HandleEvolutionChoiceHovered");
static_assert(sizeof(ItemInspectScreen_C_HandleEvolutionChoiceHovered) == 0x000008, "Wrong size on ItemInspectScreen_C_HandleEvolutionChoiceHovered");
static_assert(offsetof(ItemInspectScreen_C_HandleEvolutionChoiceHovered, Item) == 0x000000, "Member 'ItemInspectScreen_C_HandleEvolutionChoiceHovered::Item' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.HandleEvolutionChoiceUnhovered
// 0x0008 (0x0008 - 0x0000)
struct ItemInspectScreen_C_HandleEvolutionChoiceUnhovered final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_HandleEvolutionChoiceUnhovered) == 0x000008, "Wrong alignment on ItemInspectScreen_C_HandleEvolutionChoiceUnhovered");
static_assert(sizeof(ItemInspectScreen_C_HandleEvolutionChoiceUnhovered) == 0x000008, "Wrong size on ItemInspectScreen_C_HandleEvolutionChoiceUnhovered");
static_assert(offsetof(ItemInspectScreen_C_HandleEvolutionChoiceUnhovered, Item) == 0x000000, "Member 'ItemInspectScreen_C_HandleEvolutionChoiceUnhovered::Item' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.HandleEvolutionChoiceSelected
// 0x0010 (0x0010 - 0x0000)
struct ItemInspectScreen_C_HandleEvolutionChoiceSelected final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RecipeIndex;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_HandleEvolutionChoiceSelected) == 0x000008, "Wrong alignment on ItemInspectScreen_C_HandleEvolutionChoiceSelected");
static_assert(sizeof(ItemInspectScreen_C_HandleEvolutionChoiceSelected) == 0x000010, "Wrong size on ItemInspectScreen_C_HandleEvolutionChoiceSelected");
static_assert(offsetof(ItemInspectScreen_C_HandleEvolutionChoiceSelected, Item) == 0x000000, "Member 'ItemInspectScreen_C_HandleEvolutionChoiceSelected::Item' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleEvolutionChoiceSelected, RecipeIndex) == 0x000008, "Member 'ItemInspectScreen_C_HandleEvolutionChoiceSelected::RecipeIndex' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.GetFirstEvolutionOption
// 0x00F8 (0x00F8 - 0x0000)
struct ItemInspectScreen_C_GetFirstEvolutionOption final
{
public:
	class UFortItem*                              EvolutionItem;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFortItemQuantityPair>          Results;                                           // 0x0008(0x0010)(Edit, ZeroConstructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortItemQuantityPair                  CallFunc_Array_Get_Item;                           // 0x0040(0x0028)()
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue2;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItemDefinition*                    CallFunc_GetItemDefinitionBP_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItemDefinition*                    CallFunc_GetItemFromItemQuantityPair_ReturnValue;  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FRecipe>                        CallFunc_GetConversionRecipesFromItemDefintion_ReturnValue; // 0x0080(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRecipe                                CallFunc_Array_Get_Item2;                          // 0x0098(0x0050)()
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue2;              // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              CallFunc_CreateTemporaryItemInstanceBP_ReturnValue; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemInspectScreen_C_GetFirstEvolutionOption) == 0x000008, "Wrong alignment on ItemInspectScreen_C_GetFirstEvolutionOption");
static_assert(sizeof(ItemInspectScreen_C_GetFirstEvolutionOption) == 0x0000F8, "Wrong size on ItemInspectScreen_C_GetFirstEvolutionOption");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, EvolutionItem) == 0x000000, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::EvolutionItem' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, Results) == 0x000008, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::Results' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000020, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_GetContext_ReturnValue) == 0x000030, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_Array_Get_Item) == 0x000040, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_GetContext_ReturnValue2) == 0x000068, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_GetItemDefinitionBP_ReturnValue) == 0x000070, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_GetItemDefinitionBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_GetItemFromItemQuantityPair_ReturnValue) == 0x000078, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_GetItemFromItemQuantityPair_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_GetConversionRecipesFromItemDefintion_ReturnValue) == 0x000080, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_GetConversionRecipesFromItemDefintion_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_Array_Get_Item2) == 0x000098, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_Array_Length_ReturnValue2) == 0x0000E8, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_Greater_IntInt_ReturnValue2) == 0x0000EC, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_Greater_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_GetFirstEvolutionOption, CallFunc_CreateTemporaryItemInstanceBP_ReturnValue) == 0x0000F0, "Member 'ItemInspectScreen_C_GetFirstEvolutionOption::CallFunc_CreateTemporaryItemInstanceBP_ReturnValue' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.SetupActionHandlers
// 0x00A0 (0x00A0 - 0x0000)
struct ItemInspectScreen_C_SetupActionHandlers final
{
public:
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x0010(0x0010)(NoDestructor)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate2;             // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle2;             // 0x0030(0x0010)(NoDestructor)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle3;             // 0x0040(0x0010)(NoDestructor)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate3;             // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle4;             // 0x0060(0x0010)(NoDestructor)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate4;             // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate5;             // 0x0080(0x0010)(ZeroConstructor, NoDestructor)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle5;             // 0x0090(0x0010)(NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_SetupActionHandlers) == 0x000008, "Wrong alignment on ItemInspectScreen_C_SetupActionHandlers");
static_assert(sizeof(ItemInspectScreen_C_SetupActionHandlers) == 0x0000A0, "Wrong size on ItemInspectScreen_C_SetupActionHandlers");
static_assert(offsetof(ItemInspectScreen_C_SetupActionHandlers, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'ItemInspectScreen_C_SetupActionHandlers::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetupActionHandlers, K2Node_MakeStruct_DataTableRowHandle) == 0x000010, "Member 'ItemInspectScreen_C_SetupActionHandlers::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetupActionHandlers, K2Node_CreateDelegate_OutputDelegate2) == 0x000020, "Member 'ItemInspectScreen_C_SetupActionHandlers::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetupActionHandlers, K2Node_MakeStruct_DataTableRowHandle2) == 0x000030, "Member 'ItemInspectScreen_C_SetupActionHandlers::K2Node_MakeStruct_DataTableRowHandle2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetupActionHandlers, K2Node_MakeStruct_DataTableRowHandle3) == 0x000040, "Member 'ItemInspectScreen_C_SetupActionHandlers::K2Node_MakeStruct_DataTableRowHandle3' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetupActionHandlers, K2Node_CreateDelegate_OutputDelegate3) == 0x000050, "Member 'ItemInspectScreen_C_SetupActionHandlers::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetupActionHandlers, K2Node_MakeStruct_DataTableRowHandle4) == 0x000060, "Member 'ItemInspectScreen_C_SetupActionHandlers::K2Node_MakeStruct_DataTableRowHandle4' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetupActionHandlers, K2Node_CreateDelegate_OutputDelegate4) == 0x000070, "Member 'ItemInspectScreen_C_SetupActionHandlers::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetupActionHandlers, K2Node_CreateDelegate_OutputDelegate5) == 0x000080, "Member 'ItemInspectScreen_C_SetupActionHandlers::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetupActionHandlers, K2Node_MakeStruct_DataTableRowHandle5) == 0x000090, "Member 'ItemInspectScreen_C_SetupActionHandlers::K2Node_MakeStruct_DataTableRowHandle5' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.OpenItemInspect (Function)
// 0x0010 (0x0010 - 0x0000)
struct ItemInspectScreen_C_OpenItemInspect__Function_ final
{
public:
	class UFortItem*                              ItemToInspect;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortItemInspectionMode                       Mode;                                              // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShouldAllowUpgrading;                              // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShouldAllowEvolution;                              // 0x000A(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShouldAllowFavoriting;                             // 0x000B(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShouldShowPreviewDisplay;                          // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_OpenItemInspect__Function_) == 0x000008, "Wrong alignment on ItemInspectScreen_C_OpenItemInspect__Function_");
static_assert(sizeof(ItemInspectScreen_C_OpenItemInspect__Function_) == 0x000010, "Wrong size on ItemInspectScreen_C_OpenItemInspect__Function_");
static_assert(offsetof(ItemInspectScreen_C_OpenItemInspect__Function_, ItemToInspect) == 0x000000, "Member 'ItemInspectScreen_C_OpenItemInspect__Function_::ItemToInspect' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_OpenItemInspect__Function_, Mode) == 0x000008, "Member 'ItemInspectScreen_C_OpenItemInspect__Function_::Mode' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_OpenItemInspect__Function_, ShouldAllowUpgrading) == 0x000009, "Member 'ItemInspectScreen_C_OpenItemInspect__Function_::ShouldAllowUpgrading' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_OpenItemInspect__Function_, ShouldAllowEvolution) == 0x00000A, "Member 'ItemInspectScreen_C_OpenItemInspect__Function_::ShouldAllowEvolution' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_OpenItemInspect__Function_, ShouldAllowFavoriting) == 0x00000B, "Member 'ItemInspectScreen_C_OpenItemInspect__Function_::ShouldAllowFavoriting' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_OpenItemInspect__Function_, ShouldShowPreviewDisplay) == 0x00000C, "Member 'ItemInspectScreen_C_OpenItemInspect__Function_::ShouldShowPreviewDisplay' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.HandleCursorModeChanging
// 0x0005 (0x0005 - 0x0000)
struct ItemInspectScreen_C_HandleCursorModeChanging final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HandleBack_PassThrough;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActivated_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_HandleCursorModeChanging) == 0x000001, "Wrong alignment on ItemInspectScreen_C_HandleCursorModeChanging");
static_assert(sizeof(ItemInspectScreen_C_HandleCursorModeChanging) == 0x000005, "Wrong size on ItemInspectScreen_C_HandleCursorModeChanging");
static_assert(offsetof(ItemInspectScreen_C_HandleCursorModeChanging, IsEnabled) == 0x000000, "Member 'ItemInspectScreen_C_HandleCursorModeChanging::IsEnabled' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleCursorModeChanging, CallFunc_HandleBack_PassThrough) == 0x000001, "Member 'ItemInspectScreen_C_HandleCursorModeChanging::CallFunc_HandleBack_PassThrough' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleCursorModeChanging, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'ItemInspectScreen_C_HandleCursorModeChanging::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleCursorModeChanging, CallFunc_IsActivated_ReturnValue) == 0x000003, "Member 'ItemInspectScreen_C_HandleCursorModeChanging::CallFunc_IsActivated_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleCursorModeChanging, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'ItemInspectScreen_C_HandleCursorModeChanging::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.HandleEvolutionComplete
// 0x0028 (0x0028 - 0x0000)
struct ItemInspectScreen_C_HandleEvolutionComplete final
{
public:
	TArray<struct FFortItemInstanceQuantityPair>  ResultingItems;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FFortItemInstanceQuantityPair          CallFunc_Array_Get_Item;                           // 0x0010(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_HandleEvolutionComplete) == 0x000008, "Wrong alignment on ItemInspectScreen_C_HandleEvolutionComplete");
static_assert(sizeof(ItemInspectScreen_C_HandleEvolutionComplete) == 0x000028, "Wrong size on ItemInspectScreen_C_HandleEvolutionComplete");
static_assert(offsetof(ItemInspectScreen_C_HandleEvolutionComplete, ResultingItems) == 0x000000, "Member 'ItemInspectScreen_C_HandleEvolutionComplete::ResultingItems' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleEvolutionComplete, CallFunc_Array_Get_Item) == 0x000010, "Member 'ItemInspectScreen_C_HandleEvolutionComplete::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleEvolutionComplete, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'ItemInspectScreen_C_HandleEvolutionComplete::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_HandleEvolutionComplete, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'ItemInspectScreen_C_HandleEvolutionComplete::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.RefreshActionHandlers
// 0x0030 (0x0030 - 0x0000)
struct ItemInspectScreen_C_RefreshActionHandlers final
{
public:
	EInputActionState                             Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             Temp_byte_Variable2;                               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             Temp_byte_Variable3;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             Temp_byte_Variable4;                               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             Temp_byte_Variable5;                               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             Temp_byte_Variable6;                               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSchematicOrCraftedWeapon_ReturnValue;   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasEvolutions_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInZone_ReturnValue;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxLevel_ReturnValue;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLevel_ReturnValue;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             K2Node_Select2_Default;                            // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             K2Node_Select3_Default;                            // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_RefreshActionHandlers) == 0x000008, "Wrong alignment on ItemInspectScreen_C_RefreshActionHandlers");
static_assert(sizeof(ItemInspectScreen_C_RefreshActionHandlers) == 0x000030, "Wrong size on ItemInspectScreen_C_RefreshActionHandlers");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, Temp_byte_Variable) == 0x000000, "Member 'ItemInspectScreen_C_RefreshActionHandlers::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, Temp_byte_Variable2) == 0x000001, "Member 'ItemInspectScreen_C_RefreshActionHandlers::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, Temp_bool_Variable) == 0x000002, "Member 'ItemInspectScreen_C_RefreshActionHandlers::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, Temp_byte_Variable3) == 0x000003, "Member 'ItemInspectScreen_C_RefreshActionHandlers::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, Temp_byte_Variable4) == 0x000004, "Member 'ItemInspectScreen_C_RefreshActionHandlers::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, Temp_bool_Variable2) == 0x000005, "Member 'ItemInspectScreen_C_RefreshActionHandlers::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, Temp_byte_Variable5) == 0x000006, "Member 'ItemInspectScreen_C_RefreshActionHandlers::Temp_byte_Variable5' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, Temp_byte_Variable6) == 0x000007, "Member 'ItemInspectScreen_C_RefreshActionHandlers::Temp_byte_Variable6' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, Temp_bool_Variable3) == 0x000008, "Member 'ItemInspectScreen_C_RefreshActionHandlers::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, CallFunc_IsSchematicOrCraftedWeapon_ReturnValue) == 0x000009, "Member 'ItemInspectScreen_C_RefreshActionHandlers::CallFunc_IsSchematicOrCraftedWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, K2Node_SwitchEnum_CmpSuccess) == 0x00000A, "Member 'ItemInspectScreen_C_RefreshActionHandlers::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, CallFunc_IsValid_ReturnValue) == 0x00000B, "Member 'ItemInspectScreen_C_RefreshActionHandlers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, K2Node_Select_Default) == 0x00000C, "Member 'ItemInspectScreen_C_RefreshActionHandlers::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, CallFunc_GetContext_ReturnValue) == 0x000010, "Member 'ItemInspectScreen_C_RefreshActionHandlers::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, CallFunc_HasEvolutions_ReturnValue) == 0x000018, "Member 'ItemInspectScreen_C_RefreshActionHandlers::CallFunc_HasEvolutions_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, CallFunc_IsInZone_ReturnValue) == 0x000019, "Member 'ItemInspectScreen_C_RefreshActionHandlers::CallFunc_IsInZone_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, CallFunc_GetMaxLevel_ReturnValue) == 0x00001C, "Member 'ItemInspectScreen_C_RefreshActionHandlers::CallFunc_GetMaxLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'ItemInspectScreen_C_RefreshActionHandlers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, CallFunc_GetLevel_ReturnValue) == 0x000024, "Member 'ItemInspectScreen_C_RefreshActionHandlers::CallFunc_GetLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'ItemInspectScreen_C_RefreshActionHandlers::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, CallFunc_Less_IntInt_ReturnValue) == 0x000029, "Member 'ItemInspectScreen_C_RefreshActionHandlers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, K2Node_Select2_Default) == 0x00002A, "Member 'ItemInspectScreen_C_RefreshActionHandlers::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, CallFunc_BooleanAND_ReturnValue2) == 0x00002B, "Member 'ItemInspectScreen_C_RefreshActionHandlers::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, CallFunc_BooleanAND_ReturnValue3) == 0x00002C, "Member 'ItemInspectScreen_C_RefreshActionHandlers::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_RefreshActionHandlers, K2Node_Select3_Default) == 0x00002D, "Member 'ItemInspectScreen_C_RefreshActionHandlers::K2Node_Select3_Default' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.RefreshCallout
// 0x0001 (0x0001 - 0x0000)
struct ItemInspectScreen_C_RefreshCallout final
{
public:
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_RefreshCallout) == 0x000001, "Wrong alignment on ItemInspectScreen_C_RefreshCallout");
static_assert(sizeof(ItemInspectScreen_C_RefreshCallout) == 0x000001, "Wrong size on ItemInspectScreen_C_RefreshCallout");
static_assert(offsetof(ItemInspectScreen_C_RefreshCallout, CallFunc_BooleanAND_ReturnValue) == 0x000000, "Member 'ItemInspectScreen_C_RefreshCallout::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.ShowPreviewHeader
// 0x0005 (0x0005 - 0x0000)
struct ItemInspectScreen_C_ShowPreviewHeader final
{
public:
	bool                                          ShowPreviewLabel;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_ShowPreviewHeader) == 0x000001, "Wrong alignment on ItemInspectScreen_C_ShowPreviewHeader");
static_assert(sizeof(ItemInspectScreen_C_ShowPreviewHeader) == 0x000005, "Wrong size on ItemInspectScreen_C_ShowPreviewHeader");
static_assert(offsetof(ItemInspectScreen_C_ShowPreviewHeader, ShowPreviewLabel) == 0x000000, "Member 'ItemInspectScreen_C_ShowPreviewHeader::ShowPreviewLabel' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShowPreviewHeader, Temp_bool_Variable) == 0x000001, "Member 'ItemInspectScreen_C_ShowPreviewHeader::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShowPreviewHeader, Temp_byte_Variable) == 0x000002, "Member 'ItemInspectScreen_C_ShowPreviewHeader::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShowPreviewHeader, Temp_byte_Variable2) == 0x000003, "Member 'ItemInspectScreen_C_ShowPreviewHeader::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_ShowPreviewHeader, K2Node_Select_Default) == 0x000004, "Member 'ItemInspectScreen_C_ShowPreviewHeader::K2Node_Select_Default' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.SetTabButtonStyle
// 0x0018 (0x0018 - 0x0000)
struct ItemInspectScreen_C_SetTabButtonStyle final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UIconTextButton_C*                      K2Node_DynamicCast_AsIcon_Text_Button;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_SetTabButtonStyle) == 0x000008, "Wrong alignment on ItemInspectScreen_C_SetTabButtonStyle");
static_assert(sizeof(ItemInspectScreen_C_SetTabButtonStyle) == 0x000018, "Wrong size on ItemInspectScreen_C_SetTabButtonStyle");
static_assert(offsetof(ItemInspectScreen_C_SetTabButtonStyle, Object) == 0x000000, "Member 'ItemInspectScreen_C_SetTabButtonStyle::Object' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetTabButtonStyle, K2Node_DynamicCast_AsIcon_Text_Button) == 0x000008, "Member 'ItemInspectScreen_C_SetTabButtonStyle::K2Node_DynamicCast_AsIcon_Text_Button' has a wrong offset!");
static_assert(offsetof(ItemInspectScreen_C_SetTabButtonStyle, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ItemInspectScreen_C_SetTabButtonStyle::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ItemInspectScreen.ItemInspectScreen_C.SetInspectModeForChildPanels
// 0x0001 (0x0001 - 0x0000)
struct ItemInspectScreen_C_SetInspectModeForChildPanels final
{
public:
	EFortItemInspectionMode                       NewInspectMode;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemInspectScreen_C_SetInspectModeForChildPanels) == 0x000001, "Wrong alignment on ItemInspectScreen_C_SetInspectModeForChildPanels");
static_assert(sizeof(ItemInspectScreen_C_SetInspectModeForChildPanels) == 0x000001, "Wrong size on ItemInspectScreen_C_SetInspectModeForChildPanels");
static_assert(offsetof(ItemInspectScreen_C_SetInspectModeForChildPanels, NewInspectMode) == 0x000000, "Member 'ItemInspectScreen_C_SetInspectModeForChildPanels::NewInspectMode' has a wrong offset!");

}

