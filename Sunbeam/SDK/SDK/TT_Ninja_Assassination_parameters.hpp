#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TT_Ninja_Assassination

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function TT_Ninja_Assassination.TT_Ninja_Assassination_C.InitializeAbilityInstanceInternal
// 0x0020 (0x0020 - 0x0000)
struct TT_Ninja_Assassination_C_InitializeAbilityInstanceInternal final
{
public:
	const class UGameplayAbility*                 AbilityInstance;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UFortTooltipContext*              Context;                                           // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGA_Ninja_Assassination_C*              K2Node_DynamicCast_AsGA_Ninja_Assassination;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TT_Ninja_Assassination_C_InitializeAbilityInstanceInternal) == 0x000008, "Wrong alignment on TT_Ninja_Assassination_C_InitializeAbilityInstanceInternal");
static_assert(sizeof(TT_Ninja_Assassination_C_InitializeAbilityInstanceInternal) == 0x000020, "Wrong size on TT_Ninja_Assassination_C_InitializeAbilityInstanceInternal");
static_assert(offsetof(TT_Ninja_Assassination_C_InitializeAbilityInstanceInternal, AbilityInstance) == 0x000000, "Member 'TT_Ninja_Assassination_C_InitializeAbilityInstanceInternal::AbilityInstance' has a wrong offset!");
static_assert(offsetof(TT_Ninja_Assassination_C_InitializeAbilityInstanceInternal, Context) == 0x000008, "Member 'TT_Ninja_Assassination_C_InitializeAbilityInstanceInternal::Context' has a wrong offset!");
static_assert(offsetof(TT_Ninja_Assassination_C_InitializeAbilityInstanceInternal, K2Node_DynamicCast_AsGA_Ninja_Assassination) == 0x000010, "Member 'TT_Ninja_Assassination_C_InitializeAbilityInstanceInternal::K2Node_DynamicCast_AsGA_Ninja_Assassination' has a wrong offset!");
static_assert(offsetof(TT_Ninja_Assassination_C_InitializeAbilityInstanceInternal, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'TT_Ninja_Assassination_C_InitializeAbilityInstanceInternal::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function TT_Ninja_Assassination.TT_Ninja_Assassination_C.GetTextForTokenFromAbilityInstanceInternal
// 0x0140 (0x0140 - 0x0000)
struct TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal final
{
public:
	const class UGameplayAbility*                 AbilityInstance;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag;                                               // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	const class UFortTooltipContext*              Context;                                           // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Token;                                             // 0x0018(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class FText                                   OutText;                                           // 0x0020(0x0018)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LongSassinDuration;                                // 0x0040(0x0018)(Edit)
	class FText                                   AssassinationDuration;                             // 0x0058(0x0018)(Edit)
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGA_Ninja_Assassination_C*              K2Node_DynamicCast_AsGA_Ninja_Assassination;       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0088(0x0018)()
	class FText                                   Temp_text_Variable2;                               // 0x00A0(0x0018)()
	bool                                          Temp_bool_Variable2;                               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00C0(0x0018)()
	class FText                                   K2Node_Select2_Default;                            // 0x00D8(0x0018)()
	class FText                                   Temp_text_Variable3;                               // 0x00F0(0x0018)()
	class FText                                   Temp_text_Variable4;                               // 0x0108(0x0018)()
	bool                                          Temp_bool_Variable3;                               // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select3_Default;                            // 0x0128(0x0018)()
};
static_assert(alignof(TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal) == 0x000008, "Wrong alignment on TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal");
static_assert(sizeof(TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal) == 0x000140, "Wrong size on TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal");
static_assert(offsetof(TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal, AbilityInstance) == 0x000000, "Member 'TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal::AbilityInstance' has a wrong offset!");
static_assert(offsetof(TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal, Tag) == 0x000008, "Member 'TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal::Tag' has a wrong offset!");
static_assert(offsetof(TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal, Context) == 0x000010, "Member 'TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal::Context' has a wrong offset!");
static_assert(offsetof(TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal, Token) == 0x000018, "Member 'TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal::Token' has a wrong offset!");
static_assert(offsetof(TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal, OutText) == 0x000020, "Member 'TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal::OutText' has a wrong offset!");
static_assert(offsetof(TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal, ReturnValue) == 0x000038, "Member 'TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal::ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal, LongSassinDuration) == 0x000040, "Member 'TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal::LongSassinDuration' has a wrong offset!");
static_assert(offsetof(TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal, AssassinationDuration) == 0x000058, "Member 'TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal::AssassinationDuration' has a wrong offset!");
static_assert(offsetof(TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal, Temp_bool_Variable) == 0x000070, "Member 'TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000071, "Member 'TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal, K2Node_DynamicCast_AsGA_Ninja_Assassination) == 0x000078, "Member 'TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal::K2Node_DynamicCast_AsGA_Ninja_Assassination' has a wrong offset!");
static_assert(offsetof(TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal, CallFunc_IsValid_ReturnValue) == 0x000081, "Member 'TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal, Temp_text_Variable) == 0x000088, "Member 'TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal, Temp_text_Variable2) == 0x0000A0, "Member 'TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal::Temp_text_Variable2' has a wrong offset!");
static_assert(offsetof(TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal, Temp_bool_Variable2) == 0x0000B8, "Member 'TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal, K2Node_Select_Default) == 0x0000C0, "Member 'TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal, K2Node_Select2_Default) == 0x0000D8, "Member 'TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal, Temp_text_Variable3) == 0x0000F0, "Member 'TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal::Temp_text_Variable3' has a wrong offset!");
static_assert(offsetof(TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal, Temp_text_Variable4) == 0x000108, "Member 'TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal::Temp_text_Variable4' has a wrong offset!");
static_assert(offsetof(TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal, Temp_bool_Variable3) == 0x000120, "Member 'TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal, K2Node_Select3_Default) == 0x000128, "Member 'TT_Ninja_Assassination_C_GetTextForTokenFromAbilityInstanceInternal::K2Node_Select3_Default' has a wrong offset!");

}

