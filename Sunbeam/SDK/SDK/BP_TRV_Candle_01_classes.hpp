#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TRV_Candle_01

#include "Basic.hpp"

#include "Transylvania_LightMaster_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TRV_Candle_01.BP_TRV_Candle_01_C
// 0x0050 (0x1130 - 0x10E0)
class ABP_TRV_Candle_01_C final : public ATransylvania_LightMaster_C
{
public:
	class UStaticMeshComponent*                   BloomPlane5;                                       // 0x10E0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BloomPlane4;                                       // 0x10E8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BloomPlane3;                                       // 0x10F0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BloomPlane2;                                       // 0x10F8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BloomPlane1;                                       // 0x1100(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Flame5;                                            // 0x1108(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Flame4;                                            // 0x1110(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Flame3;                                            // 0x1118(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Flame2;                                            // 0x1120(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Flame1;                                            // 0x1128(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TRV_Candle_01_C">();
	}
	static class ABP_TRV_Candle_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_TRV_Candle_01_C>();
	}
};
static_assert(alignof(ABP_TRV_Candle_01_C) == 0x000010, "Wrong alignment on ABP_TRV_Candle_01_C");
static_assert(sizeof(ABP_TRV_Candle_01_C) == 0x001130, "Wrong size on ABP_TRV_Candle_01_C");
static_assert(offsetof(ABP_TRV_Candle_01_C, BloomPlane5) == 0x0010E0, "Member 'ABP_TRV_Candle_01_C::BloomPlane5' has a wrong offset!");
static_assert(offsetof(ABP_TRV_Candle_01_C, BloomPlane4) == 0x0010E8, "Member 'ABP_TRV_Candle_01_C::BloomPlane4' has a wrong offset!");
static_assert(offsetof(ABP_TRV_Candle_01_C, BloomPlane3) == 0x0010F0, "Member 'ABP_TRV_Candle_01_C::BloomPlane3' has a wrong offset!");
static_assert(offsetof(ABP_TRV_Candle_01_C, BloomPlane2) == 0x0010F8, "Member 'ABP_TRV_Candle_01_C::BloomPlane2' has a wrong offset!");
static_assert(offsetof(ABP_TRV_Candle_01_C, BloomPlane1) == 0x001100, "Member 'ABP_TRV_Candle_01_C::BloomPlane1' has a wrong offset!");
static_assert(offsetof(ABP_TRV_Candle_01_C, Flame5) == 0x001108, "Member 'ABP_TRV_Candle_01_C::Flame5' has a wrong offset!");
static_assert(offsetof(ABP_TRV_Candle_01_C, Flame4) == 0x001110, "Member 'ABP_TRV_Candle_01_C::Flame4' has a wrong offset!");
static_assert(offsetof(ABP_TRV_Candle_01_C, Flame3) == 0x001118, "Member 'ABP_TRV_Candle_01_C::Flame3' has a wrong offset!");
static_assert(offsetof(ABP_TRV_Candle_01_C, Flame2) == 0x001120, "Member 'ABP_TRV_Candle_01_C::Flame2' has a wrong offset!");
static_assert(offsetof(ABP_TRV_Candle_01_C, Flame1) == 0x001128, "Member 'ABP_TRV_Candle_01_C::Flame1' has a wrong offset!");

}

