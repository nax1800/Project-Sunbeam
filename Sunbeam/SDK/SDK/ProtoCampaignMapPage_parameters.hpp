#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProtoCampaignMapPage

#include "Basic.hpp"


namespace SDK::Params
{

// Function ProtoCampaignMapPage.ProtoCampaignMapPage_C.ExecuteUbergraph_ProtoCampaignMapPage
// 0x000C (0x000C - 0x0000)
struct ProtoCampaignMapPage_C_ExecuteUbergraph_ProtoCampaignMapPage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckForMainQuest_TargetQuestFound;       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CheckForMainQuest_TargetQuestPageIndex;   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProtoCampaignMapPage_C_ExecuteUbergraph_ProtoCampaignMapPage) == 0x000004, "Wrong alignment on ProtoCampaignMapPage_C_ExecuteUbergraph_ProtoCampaignMapPage");
static_assert(sizeof(ProtoCampaignMapPage_C_ExecuteUbergraph_ProtoCampaignMapPage) == 0x00000C, "Wrong size on ProtoCampaignMapPage_C_ExecuteUbergraph_ProtoCampaignMapPage");
static_assert(offsetof(ProtoCampaignMapPage_C_ExecuteUbergraph_ProtoCampaignMapPage, EntryPoint) == 0x000000, "Member 'ProtoCampaignMapPage_C_ExecuteUbergraph_ProtoCampaignMapPage::EntryPoint' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_ExecuteUbergraph_ProtoCampaignMapPage, K2Node_Event_IsDesignTime) == 0x000004, "Member 'ProtoCampaignMapPage_C_ExecuteUbergraph_ProtoCampaignMapPage::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_ExecuteUbergraph_ProtoCampaignMapPage, CallFunc_CheckForMainQuest_TargetQuestFound) == 0x000005, "Member 'ProtoCampaignMapPage_C_ExecuteUbergraph_ProtoCampaignMapPage::CallFunc_CheckForMainQuest_TargetQuestFound' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_ExecuteUbergraph_ProtoCampaignMapPage, CallFunc_CheckForMainQuest_TargetQuestPageIndex) == 0x000008, "Member 'ProtoCampaignMapPage_C_ExecuteUbergraph_ProtoCampaignMapPage::CallFunc_CheckForMainQuest_TargetQuestPageIndex' has a wrong offset!");

// Function ProtoCampaignMapPage.ProtoCampaignMapPage_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ProtoCampaignMapPage_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProtoCampaignMapPage_C_PreConstruct) == 0x000001, "Wrong alignment on ProtoCampaignMapPage_C_PreConstruct");
static_assert(sizeof(ProtoCampaignMapPage_C_PreConstruct) == 0x000001, "Wrong size on ProtoCampaignMapPage_C_PreConstruct");
static_assert(offsetof(ProtoCampaignMapPage_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ProtoCampaignMapPage_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ProtoCampaignMapPage.ProtoCampaignMapPage_C.GetMainQuest
// 0x0020 (0x0020 - 0x0000)
struct ProtoCampaignMapPage_C_GetMainQuest final
{
public:
	class UFortQuestItem*                         OutCurentMainQuest;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestItem*                         CallFunc_GetMainQuest_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProtoCampaignMapPage_C_GetMainQuest) == 0x000008, "Wrong alignment on ProtoCampaignMapPage_C_GetMainQuest");
static_assert(sizeof(ProtoCampaignMapPage_C_GetMainQuest) == 0x000020, "Wrong size on ProtoCampaignMapPage_C_GetMainQuest");
static_assert(offsetof(ProtoCampaignMapPage_C_GetMainQuest, OutCurentMainQuest) == 0x000000, "Member 'ProtoCampaignMapPage_C_GetMainQuest::OutCurentMainQuest' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_GetMainQuest, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'ProtoCampaignMapPage_C_GetMainQuest::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_GetMainQuest, CallFunc_GetQuestManager_ReturnValue) == 0x000010, "Member 'ProtoCampaignMapPage_C_GetMainQuest::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_GetMainQuest, CallFunc_GetMainQuest_ReturnValue) == 0x000018, "Member 'ProtoCampaignMapPage_C_GetMainQuest::CallFunc_GetMainQuest_ReturnValue' has a wrong offset!");

// Function ProtoCampaignMapPage.ProtoCampaignMapPage_C.CheckForMainQuest
// 0x01B0 (0x01B0 - 0x0000)
struct ProtoCampaignMapPage_C_CheckForMainQuest final
{
public:
	bool                                          TargetQuestFound;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TargetQuestPageIndex;                              // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         QuestPageIndex;                                    // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          QuestFound;                                        // 0x000C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestMiniTile_C*                       K2Node_DynamicCast_AsQuest_Mini_Tile;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestItem*                         CallFunc_GetMainQuest_outCurentMainQuest;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetState_QuestFound;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue2;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCampaignMapPage_Plankerton_07_C*       K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_07; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCampaignMapPage_Plankerton_12_C*       K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_12; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCampaignMapPage_Plankerton_11_C*       K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_11; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCampaignMapPage_Plankerton_10_C*       K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_10; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCampaignMapPage_Plankerton_09_C*       K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_09; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCampaignMapPage_Plankerton_08_C*       K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_08; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess7;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCampaignMapPage_Plankerton_06_C*       K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_06; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess8;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCampaignMapPage_Plankerton_05_C*       K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_05; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess9;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCampaignMapPage_Plankerton_04_C*       K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_04; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess10;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCampaignMapPage_Plankerton_03_C*       K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_03; // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess11;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCampaignMapPage_Plankerton_02_C*       K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_02; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess12;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCampaignMapPage_Plankerton_01_C*       K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_01; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess13;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCampaignMapPage_Stonewood_10_C*        K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_10; // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess14;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCampaignMapPage_Stonewood_09_C*        K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_09; // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess15;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCampaignMapPage_Stonewood_08_C*        K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_08; // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess16;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCampaignMapPage_Stonewood_07_C*        K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_07; // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess17;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCampaignMapPage_Stonewood_06_C*        K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_06; // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess18;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCampaignMapPage_Stonewood_05_C*        K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_05; // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess19;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCampaignMapPage_Stonewood_04_C*        K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_04; // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess20;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCampaignMapPage_Stonewood_03_C*        K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_03; // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess21;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCampaignMapPage_Stonewood_02_C*        K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_02; // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess22;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCampaignMapPage_Stonewood_01_C*        K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_01; // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess23;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyChildren_ReturnValue;               // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProtoCampaignMapPage_C_CheckForMainQuest) == 0x000008, "Wrong alignment on ProtoCampaignMapPage_C_CheckForMainQuest");
static_assert(sizeof(ProtoCampaignMapPage_C_CheckForMainQuest) == 0x0001B0, "Wrong size on ProtoCampaignMapPage_C_CheckForMainQuest");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, TargetQuestFound) == 0x000000, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::TargetQuestFound' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, TargetQuestPageIndex) == 0x000004, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::TargetQuestPageIndex' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, QuestPageIndex) == 0x000008, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::QuestPageIndex' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, QuestFound) == 0x00000C, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::QuestFound' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, Temp_bool_Variable) == 0x00000D, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, CallFunc_Not_PreBool_ReturnValue) == 0x00000E, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, Temp_int_Variable) == 0x000010, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, CallFunc_GetChildAt_ReturnValue) == 0x000018, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, CallFunc_GetChildrenCount_ReturnValue) == 0x000020, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_AsQuest_Mini_Tile) == 0x000028, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_AsQuest_Mini_Tile' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000031, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, CallFunc_IsValid_ReturnValue) == 0x000032, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, CallFunc_BooleanAND_ReturnValue) == 0x000033, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, CallFunc_GetMainQuest_outCurentMainQuest) == 0x000038, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::CallFunc_GetMainQuest_outCurentMainQuest' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, CallFunc_SetState_QuestFound) == 0x000040, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::CallFunc_SetState_QuestFound' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, CallFunc_GetChildAt_ReturnValue2) == 0x000048, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::CallFunc_GetChildAt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_07) == 0x000050, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_07' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_bSuccess2) == 0x000058, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_12) == 0x000060, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_12' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_bSuccess3) == 0x000068, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_11) == 0x000070, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_11' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_bSuccess4) == 0x000078, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_10) == 0x000080, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_10' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_bSuccess5) == 0x000088, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_09) == 0x000090, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_09' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_bSuccess6) == 0x000098, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_08) == 0x0000A0, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_08' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_bSuccess7) == 0x0000A8, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_bSuccess7' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_06) == 0x0000B0, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_06' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_bSuccess8) == 0x0000B8, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_bSuccess8' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_05) == 0x0000C0, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_05' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_bSuccess9) == 0x0000C8, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_bSuccess9' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_04) == 0x0000D0, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_04' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_bSuccess10) == 0x0000D8, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_bSuccess10' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_03) == 0x0000E0, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_03' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_bSuccess11) == 0x0000E8, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_bSuccess11' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_02) == 0x0000F0, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_02' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_bSuccess12) == 0x0000F8, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_bSuccess12' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_01) == 0x000100, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_AsCampaign_Map_Page_Plankerton_01' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_bSuccess13) == 0x000108, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_bSuccess13' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_10) == 0x000110, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_10' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_bSuccess14) == 0x000118, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_bSuccess14' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_09) == 0x000120, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_09' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_bSuccess15) == 0x000128, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_bSuccess15' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_08) == 0x000130, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_08' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_bSuccess16) == 0x000138, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_bSuccess16' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_07) == 0x000140, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_07' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_bSuccess17) == 0x000148, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_bSuccess17' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_06) == 0x000150, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_06' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_bSuccess18) == 0x000158, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_bSuccess18' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_05) == 0x000160, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_05' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_bSuccess19) == 0x000168, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_bSuccess19' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_04) == 0x000170, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_04' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_bSuccess20) == 0x000178, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_bSuccess20' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_03) == 0x000180, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_03' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_bSuccess21) == 0x000188, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_bSuccess21' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_02) == 0x000190, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_02' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_bSuccess22) == 0x000198, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_bSuccess22' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_01) == 0x0001A0, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_AsCampaign_Map_Page_Stonewood_01' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, K2Node_DynamicCast_bSuccess23) == 0x0001A8, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::K2Node_DynamicCast_bSuccess23' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForMainQuest, CallFunc_HasAnyChildren_ReturnValue) == 0x0001A9, "Member 'ProtoCampaignMapPage_C_CheckForMainQuest::CallFunc_HasAnyChildren_ReturnValue' has a wrong offset!");

// Function ProtoCampaignMapPage.ProtoCampaignMapPage_C.CheckForIncompleteQuest-Halloween Event
// 0x0098 (0x0098 - 0x0000)
struct ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event final
{
public:
	bool                                          TargetQuestFound;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TargetQuestPageIndex;                              // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         QuestPageIndex;                                    // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          QuestFound;                                        // 0x000C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestMiniTile_C*                       K2Node_DynamicCast_AsQuest_Mini_Tile;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStateAndFindIncompleteQuest_QuestFound; // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetState_QuestFound;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue2;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHalloweenMapPage_05_C*                 K2Node_DynamicCast_AsHalloween_Map_Page_05;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHalloweenMapPage_04_C*                 K2Node_DynamicCast_AsHalloween_Map_Page_04;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHalloweenMapPage_03_C*                 K2Node_DynamicCast_AsHalloween_Map_Page_03;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHalloweenMapPage_02_C*                 K2Node_DynamicCast_AsHalloween_Map_Page_02;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess5;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHalloweenMapPage_01_C*                 K2Node_DynamicCast_AsHalloween_Map_Page_01;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess6;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyChildren_ReturnValue;               // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event) == 0x000008, "Wrong alignment on ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event");
static_assert(sizeof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event) == 0x000098, "Wrong size on ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, TargetQuestFound) == 0x000000, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::TargetQuestFound' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, TargetQuestPageIndex) == 0x000004, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::TargetQuestPageIndex' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, QuestPageIndex) == 0x000008, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::QuestPageIndex' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, QuestFound) == 0x00000C, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::QuestFound' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, Temp_bool_Variable) == 0x00000D, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, CallFunc_Not_PreBool_ReturnValue) == 0x00000E, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, Temp_int_Variable) == 0x000010, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, CallFunc_GetChildAt_ReturnValue) == 0x000018, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, CallFunc_GetChildrenCount_ReturnValue) == 0x000020, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, K2Node_DynamicCast_AsQuest_Mini_Tile) == 0x000028, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::K2Node_DynamicCast_AsQuest_Mini_Tile' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000031, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, CallFunc_SetStateAndFindIncompleteQuest_QuestFound) == 0x000032, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::CallFunc_SetStateAndFindIncompleteQuest_QuestFound' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, CallFunc_BooleanAND_ReturnValue) == 0x000033, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, CallFunc_SetState_QuestFound) == 0x000034, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::CallFunc_SetState_QuestFound' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, CallFunc_IsValid_ReturnValue) == 0x000035, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, CallFunc_GetChildAt_ReturnValue2) == 0x000040, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::CallFunc_GetChildAt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, K2Node_DynamicCast_AsHalloween_Map_Page_05) == 0x000048, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::K2Node_DynamicCast_AsHalloween_Map_Page_05' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, K2Node_DynamicCast_bSuccess2) == 0x000050, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, K2Node_DynamicCast_AsHalloween_Map_Page_04) == 0x000058, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::K2Node_DynamicCast_AsHalloween_Map_Page_04' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, K2Node_DynamicCast_bSuccess3) == 0x000060, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, K2Node_DynamicCast_AsHalloween_Map_Page_03) == 0x000068, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::K2Node_DynamicCast_AsHalloween_Map_Page_03' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, K2Node_DynamicCast_bSuccess4) == 0x000070, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, K2Node_DynamicCast_AsHalloween_Map_Page_02) == 0x000078, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::K2Node_DynamicCast_AsHalloween_Map_Page_02' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, K2Node_DynamicCast_bSuccess5) == 0x000080, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::K2Node_DynamicCast_bSuccess5' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, K2Node_DynamicCast_AsHalloween_Map_Page_01) == 0x000088, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::K2Node_DynamicCast_AsHalloween_Map_Page_01' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, K2Node_DynamicCast_bSuccess6) == 0x000090, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::K2Node_DynamicCast_bSuccess6' has a wrong offset!");
static_assert(offsetof(ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event, CallFunc_HasAnyChildren_ReturnValue) == 0x000091, "Member 'ProtoCampaignMapPage_C_CheckForIncompleteQuestMinusHalloween_Event::CallFunc_HasAnyChildren_ReturnValue' has a wrong offset!");

}

